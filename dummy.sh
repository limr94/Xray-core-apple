#!/bin/bash

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å `.go`-—Ñ–∞–π–ª–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ç–µ–∫—É—â–∞—è)
TARGET_DIR=${1:-$(pwd)}

echo "üìÇ –°–∫–∞–Ω–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤: $TARGET_DIR"

# –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º `.go`-—Ñ–∞–π–ª–∞–º
find "$TARGET_DIR" -type f -name "*.go" | while read -r file; do
    echo "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: $file"

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º `package`
    package_name=$(awk '/^package / {print $2; exit}' "$file")

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫–∏ –í –ö–û–ù–ï–¶, –Ω–æ –≤–Ω—É—Ç—Ä–∏ `package`
    cat <<EOT >> "$file"

// Dummy functions to increase binary size
package $package_name

func UnusedFunction1() int { return 42 }
func UnusedFunction2() string { return "dummy" }
func UnusedFunction3() bool { return true }
func UnusedFunction4(x int) float64 { return float64(x) * 1.5 }
func UnusedFunction5() []byte { return []byte{0xDE, 0xAD, 0xBE, 0xEF} }

EOT

    echo "‚úÖ –ó–∞–≥–ª—É—à–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–æ–Ω–µ—Ü: $file"
done

